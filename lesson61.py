'''
Задача-1: Написать класс, например, Worker, который должен содержать информацию
о работнике (ФИО, оклад, надбавка за напряженность).
Создать экземпляр класса и передать конкретные данные (примеры ФИО, должности,
оклад и надбавки). Оклад и надбавку передать в виде строки.
На основе строки создать атрибут income, который реализовать в виде словаря
и инкапуслировать. Словарь income должен содержать информацию об окладе и надбавке.
Применить к экземпляру
класса метод __dict__ и проверить какой будет результат применения этого метода.
А комментариях к заданию написать тип результата на русском языке.
'''
'''
Задача-2: Продолжить работу над задачей 1. Создать на основе класса Worker класс
Position (реализовать наследование). Добавить классу уникальный атрибут -
% премии к зарплате (от суммы оклада).
Создать метод расчета зарплаты с учетом только премии.
Реализовать обращение к этому атриубуту, как к свойству.
Проверить работу всей структуры на реальных данных, вывести результаты.
'''
class worker:
    def __init__(self, fio, pr, oklad):
        self._income = {
            'oklad': str(oklad),
            'pr': str(pr),
        }

class Position(worker):
    def __init__(self, fio, pr, oklad, procent):
        worker.__init__(self, fio, pr, oklad)
        self.procent = procent
    def proc(self):
        konzp = (int(self._income['oklad'])*((100 + int(self.procent)) // 100) + int(self._income['pr']))
        return konzp

worker1 = Position(input(), input(), input(), input())
print(type(worker1.__dict__))
print(worker1.proc)